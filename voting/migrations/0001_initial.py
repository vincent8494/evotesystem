# Generated by Django 5.2.1 on 2025-05-26 12:39

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Election',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='election name')),
                ('slug', models.SlugField(blank=True, max_length=200, null=True, unique=True, verbose_name='slug')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('start_date', models.DateTimeField(verbose_name='start date')),
                ('end_date', models.DateTimeField(verbose_name='end date')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='draft', max_length=20, verbose_name='status')),
                ('is_public', models.BooleanField(default=True, help_text='If checked, any authenticated user can view this election', verbose_name='public election')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='elections_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('managers', models.ManyToManyField(blank=True, help_text='Users who can manage this election', related_name='elections_managed', to=settings.AUTH_USER_MODEL, verbose_name='election managers')),
            ],
            options={
                'ordering': ['-start_date'],
                'permissions': [('can_manage_elections', 'Can manage elections'), ('can_verify_election', 'Can verify election results'), ('can_view_results', 'Can view election results'), ('can_export_results', 'Can export election results')],
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of the position', max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('max_votes', models.PositiveIntegerField(default=1, help_text='Maximum number of candidates a voter can select for this position')),
                ('priority', models.PositiveIntegerField(default=0, help_text='Used to order positions on the ballot (lower numbers come first)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('election', models.ForeignKey(help_text='The election this position belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='voting.election')),
            ],
            options={
                'ordering': ['election', 'priority', 'title'],
                'unique_together': {('election', 'title')},
            },
        ),
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, help_text="Candidate's biography", null=True)),
                ('manifesto', models.TextField(blank=True, help_text="Candidate's campaign promises", null=True)),
                ('is_approved', models.BooleanField(default=False, help_text='Has this candidate been approved by an admin?')),
                ('photo', models.ImageField(blank=True, help_text="Candidate's profile photo", null=True, upload_to='candidate_photos/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(help_text='The user who is a candidate', on_delete=django.db.models.deletion.CASCADE, related_name='candidacies', to=settings.AUTH_USER_MODEL)),
                ('position', models.ForeignKey(help_text='The position this candidate is running for', on_delete=django.db.models.deletion.CASCADE, related_name='candidates', to='voting.position')),
            ],
            options={
                'ordering': ['position', 'user__last_name', 'user__first_name'],
                'unique_together': {('user', 'position')},
            },
        ),
        migrations.CreateModel(
            name='ElectionResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_votes', models.PositiveIntegerField(default=0, help_text='Total number of votes received by this candidate for this position')),
                ('percentage', models.DecimalField(decimal_places=2, default=0.0, help_text='Percentage of total votes received', max_digits=5)),
                ('is_winner', models.BooleanField(default=False, help_text='Did this candidate win the position?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('candidate', models.ForeignKey(help_text='The candidate these results are for', on_delete=django.db.models.deletion.CASCADE, related_name='election_results', to='voting.candidate')),
                ('election', models.ForeignKey(help_text='The election these results are for', on_delete=django.db.models.deletion.CASCADE, related_name='election_results', to='voting.election')),
                ('position', models.ForeignKey(help_text='The position these results are for', on_delete=django.db.models.deletion.CASCADE, related_name='election_results', to='voting.position')),
            ],
            options={
                'ordering': ['election', 'position', '-total_votes'],
                'unique_together': {('election', 'position', 'candidate')},
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address of the voter', null=True)),
                ('user_agent', models.TextField(blank=True, help_text="User agent of the voter's browser", null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('candidate', models.ForeignKey(help_text='The candidate who received this vote', on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='voting.candidate')),
                ('election', models.ForeignKey(help_text='The election this vote was cast in', on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='voting.election')),
                ('position', models.ForeignKey(help_text='The position this vote was cast for', on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='voting.position')),
                ('voter', models.ForeignKey(help_text='The user who cast this vote', on_delete=django.db.models.deletion.CASCADE, related_name='votes_cast', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('voter', 'position')},
            },
        ),
        migrations.CreateModel(
            name='VoterRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_verified', models.BooleanField(default=False, help_text="Has the voter's registration been verified?")),
                ('verification_code', models.CharField(blank=True, help_text='Verification code sent to the voter', max_length=100, null=True)),
                ('has_voted', models.BooleanField(default=False, help_text='Has the voter cast their vote?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('election', models.ForeignKey(help_text='The election the voter is registered for', on_delete=django.db.models.deletion.CASCADE, related_name='voter_registrations', to='voting.election')),
                ('voter', models.ForeignKey(help_text='The user who is registered to vote', on_delete=django.db.models.deletion.CASCADE, related_name='voter_registrations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('voter', 'election')},
            },
        ),
    ]
